@import "tailwindcss";
@import "./fonts.css";

@plugin "tailwindcss-animate";

@theme {
  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --font-sans: var(--font-body), monospace;
  --font-heading: var(--font-display), sans-serif;

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }

    to {
      height: var(--radix-accordion-content-height);
    }
  }

  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }

    to {
      height: 0;
    }
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;

  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }

  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer base {
  :root {
    --background: 30 20% 98%;
    --foreground: 20 14% 4%;
    
    --card: 30 20% 98%;
    --card-foreground: 20 14% 4%;
    
    --popover: 30 20% 98%;
    --popover-foreground: 20 14% 4%;
    
    --primary: 18 100% 50%;
    --primary-foreground: 0 0% 100%;
    
    --secondary: 190 100% 42%;
    --secondary-foreground: 0 0% 100%;
    
    --muted: 25 20% 96%;
    --muted-foreground: 25 5% 45%;
    
    --accent: 359 89% 61%;
    --accent-foreground: 0 0% 100%;
    
    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;
    
    --border: 25 18% 85%;
    --input: 25 18% 85%;
    --ring: 18 100% 50%;
    
    --radius: 0.5rem;
    
    --chart-1: 18 100% 50%;
    --chart-2: 190 100% 42%;
    --chart-3: 359 89% 61%;
    --chart-4: 25 18% 85%;
    --chart-5: 20 14% 4%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  html {
    @apply scroll-smooth;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'Fira Code', monospace;
    font-synthesis-weight: none;
    text-rendering: optimizeLegibility;
  }

  h1, h2, h3, h4, h5, h6 {
    font-family: 'Space Grotesk', sans-serif;
    @apply font-bold;
  }

  code {
    font-family: 'Fira Code', monospace;
    @apply bg-muted px-1 py-0.5 rounded text-primary;
  }
}

@layer utilities {
  .bg-grid {
    background-image: linear-gradient(to right, rgba(229, 231, 235, 0.5) 1px, transparent 1px),
                     linear-gradient(to bottom, rgba(229, 231, 235, 0.5) 1px, transparent 1px);
    background-size: 24px 24px;
  }
  
  .text-gradient {
    background: linear-gradient(90deg, hsl(var(--primary)), hsl(var(--accent)));
    -webkit-background-clip: text;
    color: transparent;
  }
}